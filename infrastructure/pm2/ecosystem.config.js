module.exports = {
  apps: [
    {
      name: 'rtf-api',
      script: './target/release/rtf-api',
      cwd: '/home/ubuntu/Sandeep/projects/RTF',
      instances: 'max',
      exec_mode: 'cluster',
      env: {
        NODE_ENV: 'production',
        RUST_LOG: 'info',
        RTF_CONFIG_PATH: './config/production.toml',
        RTF_PORT: '2102',
        RTF_DATABASE_URL: 'postgresql://rtf_user:rtf_secure_password@localhost:5432/rtf_production',
        RTF_REDIS_URL: 'redis://localhost:6379/1',
        RTF_JWT_SECRET: process.env.RTF_JWT_SECRET || 'change-this-in-production',
        SOLANA_RPC_URL: 'https://api.mainnet-beta.solana.com',
        ETHEREUM_RPC_URL: process.env.ETHEREUM_RPC_URL,
        STARKNET_RPC_URL: process.env.STARKNET_RPC_URL,
        CHAINLINK_API_KEY: process.env.CHAINLINK_API_KEY,
        OPENAI_API_KEY: process.env.OPENAI_API_KEY,
      },
      env_development: {
        NODE_ENV: 'development',
        RUST_LOG: 'debug',
        RTF_CONFIG_PATH: './config/development.toml',
        RTF_PORT: '2102',
        RTF_DATABASE_URL: 'postgresql://rtf_dev:rtf_dev_password@localhost:5432/rtf_development',
        RTF_REDIS_URL: 'redis://localhost:6379/2',
      },
      error_file: './logs/rtf-api-error.log',
      out_file: './logs/rtf-api-out.log',
      log_file: './logs/rtf-api-combined.log',
      time: true,
      max_memory_restart: '2G',
      restart_delay: 4000,
      max_restarts: 10,
      min_uptime: '10s',
      kill_timeout: 5000,
      wait_ready: true,
      listen_timeout: 10000,
      health_check_grace_period: 30000,
      autorestart: true,
      watch: false,
      ignore_watch: ['node_modules', 'logs', 'target'],
      merge_logs: true,
      log_date_format: 'YYYY-MM-DD HH:mm:ss Z',
    },
    {
      name: 'rtf-oracle',
      script: './target/release/rtf-oracle',
      cwd: '/home/ubuntu/Sandeep/projects/RTF',
      instances: 2,
      exec_mode: 'cluster',
      env: {
        NODE_ENV: 'production',
        RUST_LOG: 'info',
        RTF_CONFIG_PATH: './config/production.toml',
        RTF_PORT: '2103',
        RTF_ORACLE_INTERVAL: '60',
        CHAINLINK_API_KEY: process.env.CHAINLINK_API_KEY,
        SWITCHBOARD_API_KEY: process.env.SWITCHBOARD_API_KEY,
      },
      env_development: {
        NODE_ENV: 'development',
        RUST_LOG: 'debug',
        RTF_CONFIG_PATH: './config/development.toml',
        RTF_PORT: '2103',
        RTF_ORACLE_INTERVAL: '30',
      },
      error_file: './logs/rtf-oracle-error.log',
      out_file: './logs/rtf-oracle-out.log',
      log_file: './logs/rtf-oracle-combined.log',
      time: true,
      max_memory_restart: '1G',
      restart_delay: 5000,
      max_restarts: 15,
      min_uptime: '10s',
      autorestart: true,
      watch: false,
    },
    {
      name: 'rtf-compliance',
      script: './target/release/rtf-compliance',
      cwd: '/home/ubuntu/Sandeep/projects/RTF',
      instances: 1,
      exec_mode: 'fork',
      env: {
        NODE_ENV: 'production',
        RUST_LOG: 'info',
        RTF_CONFIG_PATH: './config/production.toml',
        RTF_PORT: '2104',
        KYC_PROVIDER_API_KEY: process.env.KYC_PROVIDER_API_KEY,
        AML_SCREENING_API_KEY: process.env.AML_SCREENING_API_KEY,
      },
      env_development: {
        NODE_ENV: 'development',
        RUST_LOG: 'debug',
        RTF_CONFIG_PATH: './config/development.toml',
        RTF_PORT: '2104',
      },
      error_file: './logs/rtf-compliance-error.log',
      out_file: './logs/rtf-compliance-out.log',
      log_file: './logs/rtf-compliance-combined.log',
      time: true,
      max_memory_restart: '512M',
      restart_delay: 3000,
      max_restarts: 10,
      min_uptime: '10s',
      autorestart: true,
      watch: false,
    },
    {
      name: 'rtf-treasury',
      script: './target/release/rtf-treasury',
      cwd: '/home/ubuntu/Sandeep/projects/RTF',
      instances: 1,
      exec_mode: 'fork',
      env: {
        NODE_ENV: 'production',
        RUST_LOG: 'info',
        RTF_CONFIG_PATH: './config/production.toml',
        RTF_PORT: '2105',
        OPENAI_API_KEY: process.env.OPENAI_API_KEY,
        ANTHROPIC_API_KEY: process.env.ANTHROPIC_API_KEY,
      },
      env_development: {
        NODE_ENV: 'development',
        RUST_LOG: 'debug',
        RTF_CONFIG_PATH: './config/development.toml',
        RTF_PORT: '2105',
      },
      error_file: './logs/rtf-treasury-error.log',
      out_file: './logs/rtf-treasury-out.log',
      log_file: './logs/rtf-treasury-combined.log',
      time: true,
      max_memory_restart: '1G',
      restart_delay: 10000,
      max_restarts: 5,
      min_uptime: '30s',
      autorestart: true,
      watch: false,
    },
    {
      name: 'rtf-zk-nav',
      script: './target/release/rtf-zk-nav',
      cwd: '/home/ubuntu/Sandeep/projects/RTF',
      instances: 1,
      exec_mode: 'fork',
      env: {
        NODE_ENV: 'production',
        RUST_LOG: 'info',
        RTF_CONFIG_PATH: './config/production.toml',
        RTF_PORT: '2106',
        STARKNET_PRIVATE_KEY: process.env.STARKNET_PRIVATE_KEY,
        STARKNET_ACCOUNT_ADDRESS: process.env.STARKNET_ACCOUNT_ADDRESS,
      },
      env_development: {
        NODE_ENV: 'development',
        RUST_LOG: 'debug',
        RTF_CONFIG_PATH: './config/development.toml',
        RTF_PORT: '2106',
      },
      error_file: './logs/rtf-zk-nav-error.log',
      out_file: './logs/rtf-zk-nav-out.log',
      log_file: './logs/rtf-zk-nav-combined.log',
      time: true,
      max_memory_restart: '2G',
      restart_delay: 15000,
      max_restarts: 3,
      min_uptime: '60s',
      autorestart: true,
      watch: false,
    },
    {
      name: 'rtf-cross-chain',
      script: './target/release/rtf-cross-chain',
      cwd: '/home/ubuntu/Sandeep/projects/RTF',
      instances: 1,
      exec_mode: 'fork',
      env: {
        NODE_ENV: 'production',
        RUST_LOG: 'info',
        RTF_CONFIG_PATH: './config/production.toml',
        RTF_PORT: '2107',
        ETHEREUM_PRIVATE_KEY: process.env.ETHEREUM_PRIVATE_KEY,
        SOLANA_KEYPAIR_PATH: './keypairs/solana-mainnet.json',
        BITCOIN_PRIVATE_KEY: process.env.BITCOIN_PRIVATE_KEY,
      },
      env_development: {
        NODE_ENV: 'development',
        RUST_LOG: 'debug',
        RTF_CONFIG_PATH: './config/development.toml',
        RTF_PORT: '2107',
      },
      error_file: './logs/rtf-cross-chain-error.log',
      out_file: './logs/rtf-cross-chain-out.log',
      log_file: './logs/rtf-cross-chain-combined.log',
      time: true,
      max_memory_restart: '1G',
      restart_delay: 8000,
      max_restarts: 8,
      min_uptime: '20s',
      autorestart: true,
      watch: false,
    },
    {
      name: 'rtf-metrics',
      script: './target/release/rtf-metrics',
      cwd: '/home/ubuntu/Sandeep/projects/RTF',
      instances: 1,
      exec_mode: 'fork',
      env: {
        NODE_ENV: 'production',
        RUST_LOG: 'info',
        RTF_CONFIG_PATH: './config/production.toml',
        RTF_PORT: '2108',
        PROMETHEUS_PORT: '9090',
        GRAFANA_API_KEY: process.env.GRAFANA_API_KEY,
      },
      env_development: {
        NODE_ENV: 'development',
        RUST_LOG: 'debug',
        RTF_CONFIG_PATH: './config/development.toml',
        RTF_PORT: '2108',
      },
      error_file: './logs/rtf-metrics-error.log',
      out_file: './logs/rtf-metrics-out.log',
      log_file: './logs/rtf-metrics-combined.log',
      time: true,
      max_memory_restart: '512M',
      restart_delay: 2000,
      max_restarts: 20,
      min_uptime: '5s',
      autorestart: true,
      watch: false,
    },
    {
      name: 'rtf-frontend',
      script: 'npm',
      args: 'run start',
      cwd: '/home/ubuntu/Sandeep/projects/RTF/frontend',
      instances: 1,
      exec_mode: 'fork',
      env: {
        NODE_ENV: 'production',
        PORT: '2101',
        REACT_APP_API_URL: 'https://api.rtf.finance',
        REACT_APP_WS_URL: 'wss://api.rtf.finance/ws',
        REACT_APP_ENVIRONMENT: 'production',
        GENERATE_SOURCEMAP: 'false',
      },
      env_development: {
        NODE_ENV: 'development',
        PORT: '2101',
        REACT_APP_API_URL: 'http://localhost:2102',
        REACT_APP_WS_URL: 'ws://localhost:2102/ws',
        REACT_APP_ENVIRONMENT: 'development',
        GENERATE_SOURCEMAP: 'true',
      },
      error_file: './logs/rtf-frontend-error.log',
      out_file: './logs/rtf-frontend-out.log',
      log_file: './logs/rtf-frontend-combined.log',
      time: true,
      max_memory_restart: '1G',
      restart_delay: 5000,
      max_restarts: 10,
      min_uptime: '10s',
      autorestart: true,
      watch: false,
    }
  ],

  deploy: {
    production: {
      user: 'ubuntu',
      host: '3.111.22.56',
      ref: 'origin/main',
      repo: 'https://github.com/MrDecryptDecipher/Real-World-Tokenized-Fund-Infrastructure-RTF-.git',
      path: '/home/ubuntu/Sandeep/projects/RTF',
      'pre-deploy-local': '',
      'post-deploy': 'cargo build --release && npm install --prefix frontend && npm run build --prefix frontend && pm2 reload ecosystem.config.js --env production',
      'pre-setup': 'sudo apt-get update && sudo apt-get install -y postgresql redis-server nginx',
      'post-setup': 'createdb rtf_production && psql rtf_production < database/schema.sql',
      env: {
        NODE_ENV: 'production'
      }
    },
    development: {
      user: 'ubuntu',
      host: 'localhost',
      ref: 'origin/develop',
      repo: 'https://github.com/MrDecryptDecipher/Real-World-Tokenized-Fund-Infrastructure-RTF-.git',
      path: '/home/ubuntu/Sandeep/projects/RTF-dev',
      'post-deploy': 'cargo build && npm install --prefix frontend && pm2 reload ecosystem.config.js --env development',
      env: {
        NODE_ENV: 'development'
      }
    }
  }
};
